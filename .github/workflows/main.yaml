name: backend

on: 
  push:
    branches: [ main ]

env:
  COMMIT_ID: ${{ github.sha }}

jobs:
  job_1:
    name: build image and push to dockerhub
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: docker login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: build image
        run: docker build . --file DevOps-Labs-Backend/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/dotnet_backend_application:${COMMIT_ID:0:7}
      
      - name: push to dockerhub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/dotnet_backend_application:${COMMIT_ID:0:7}
      
  job_2:
    name: deploy the image localy
    needs: job_1
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Execute script and store output
        id: get-ips
        run: |
          chmod +x ./aws_script.sh
          ips=$(./aws_script.sh)
          echo "$ips" > ips.txt
          cat ips.txt
          ls
        shell: bash

      - name: Loop through IP addresses and create tasks
        run: |
          ips=()
          while read -r ip; do
            ip=$(echo "$ip" | tr -d '\n')
            ips+=("$ip")
          done < ips.txt
          echo "${{ secrets.DEMO }}" > demo
          chmod 600 demo
          for ip in "${ips[@]}"; do
            ip=$(echo "$ip" | sed 's/"//g')
            scp -i demo -o StrictHostKeyChecking=no -r script.sh ${{ secrets.AWS_HOST }}@$ip:/home/ec2-user/script.sh
            ssh -i demo -o StrictHostKeyChecking=no ${{ secrets.AWS_HOST }}@$ip "chmod +x script.sh && ./script.sh $COMMIT_ID ${{ secrets.DB_HOST }} ${{ secrets.DB_PASSWORD }} ${{ secrets.DB_USERNAME }}"
          done


